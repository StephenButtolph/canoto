name: Benchmarks
on:
  pull_request:
  workflow_dispatch:
    inputs:
      old:
        description: 'Old'
        required: false
        default: 'main'
      new:
        description: 'New'
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  benchmark:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ (github.event.inputs.new != '') && github.event.inputs.new || github.event.ref }}

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Install benchstat
        run: go install golang.org/x/perf/cmd/benchstat@latest

      - name: Run benchmarks
        run: go test -bench=. -benchmem -count=10  ./... > new

      - name: Run benchmark for base code
        run: |
          git fetch origin main ${{ github.event.pull_request.base.sha }}
          HEAD="$(git rev-parse HEAD)"
          git reset --hard ${{ github.event.pull_request.base.sha }}
          go test -bench=. -benchmem -count=10  ./... > old
          git reset --hard "$HEAD"

      - name: Compare benchmarks
        run: |
          EOF="$(dd if=/dev/urandom bs=15 count=1 status=none | base64)"
          {
            echo "RESULT<<$EOF"
            go version
            benchstat old new
            echo "$EOF"
          } >> "$GITHUB_ENV"

      - name: Comment benchmark result
        continue-on-error: true
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: min-version
          hide_and_recreate: true
          hide_classify: "OUTDATED"
          message: |
            ```
            ${{ env.RESULT }}
            ```
  benchmark-on-latest:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ (github.event.inputs.new != '') && github.event.inputs.new || github.event.ref }}
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          check-latest: true

      - name: Install benchstat
        run: go install golang.org/x/perf/cmd/benchstat@latest

      - name: Run benchmarks
        run: go test -bench=. -benchmem -count=10  ./... > new

      - name: Run benchmark for base code
        run: |
          git fetch origin main ${{ github.event.pull_request.base.sha }}
          HEAD="$(git rev-parse HEAD)"
          git reset --hard ${{ github.event.pull_request.base.sha }}
          go test -bench=. -benchmem -count=10  ./... > old
          git reset --hard "$HEAD"

      - name: Compare benchmarks
        run: |
          EOF="$(dd if=/dev/urandom bs=15 count=1 status=none | base64)"
          {
            echo "RESULT<<$EOF"
            go version
            benchstat old new
            echo "$EOF"
          } >> "$GITHUB_ENV"

      - name: Comment benchmark result
        continue-on-error: true
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: latest-version
          hide_and_recreate: true
          hide_classify: "OUTDATED"
          message: |
            ```
            ${{ env.RESULT }}
            ```