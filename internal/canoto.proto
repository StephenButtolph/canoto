// Code generated by canoto. DO NOT EDIT.
// versions:
// 	canoto v0.6.0
// source: canoto.go

syntax = "proto3";

package examples;

message LargestFieldNumber {
  uint64 Int32 = 536870911;
}

message OneOf {
  oneof A {
    int32 A1 = 1;
    int64 A2 = 7;
  }
  oneof B {
    int32 B1 = 3;
    int64 B2 = 4;
  }
  int32 C = 5;
  int64 D = 6;
}

message GenericField {
  bytes Value = 1;
  repeated bytes RepeatedValue = 2;
  repeated bytes FixedRepeatedValue = 3;
  bytes Pointer = 4;
  repeated bytes RepeatedPointer = 5;
  repeated bytes FixedRepeatedPointer = 6;
  bytes Field = 7;
  repeated bytes RepeatedField = 8;
  repeated bytes FixedRepeatedField = 9;
}

message NestedGenericField {
  GenericField Value = 1;
  repeated GenericField RepeatedValue = 2;
  repeated GenericField FixedRepeatedValue = 3;
  GenericField Pointer = 4;
  repeated GenericField RepeatedPointer = 5;
  repeated GenericField FixedRepeatedPointer = 6;
  GenericField Field = 7;
  repeated GenericField RepeatedField = 8;
  repeated GenericField FixedRepeatedField = 9;
}

message Scalars {
  int32 Int8 = 1;
  int32 Int16 = 2;
  int32 Int32 = 3;
  int64 Int64 = 4;
  uint32 Uint8 = 5;
  uint32 Uint16 = 6;
  uint32 Uint32 = 7;
  uint64 Uint64 = 8;
  sint32 Sint8 = 9;
  sint32 Sint16 = 10;
  sint32 Sint32 = 11;
  sint64 Sint64 = 12;
  fixed32 Fixed32 = 13;
  fixed64 Fixed64 = 14;
  sfixed32 Sfixed32 = 15;
  sfixed64 Sfixed64 = 16;
  bool Bool = 17;
  string String = 18;
  bytes Bytes = 19;
  LargestFieldNumber LargestFieldNumber = 20;
  repeated int32 RepeatedInt8 = 21;
  repeated int32 RepeatedInt16 = 22;
  repeated int32 RepeatedInt32 = 23;
  repeated int64 RepeatedInt64 = 24;
  repeated uint32 RepeatedUint8 = 25;
  repeated uint32 RepeatedUint16 = 26;
  repeated uint32 RepeatedUint32 = 27;
  repeated uint64 RepeatedUint64 = 28;
  repeated sint32 RepeatedSint8 = 29;
  repeated sint32 RepeatedSint16 = 30;
  repeated sint32 RepeatedSint32 = 31;
  repeated sint64 RepeatedSint64 = 32;
  repeated fixed32 RepeatedFixed32 = 33;
  repeated fixed64 RepeatedFixed64 = 34;
  repeated sfixed32 RepeatedSfixed32 = 35;
  repeated sfixed64 RepeatedSfixed64 = 36;
  repeated bool RepeatedBool = 37;
  repeated string RepeatedString = 38;
  repeated bytes RepeatedBytes = 39;
  repeated LargestFieldNumber RepeatedLargestFieldNumber = 40;
  repeated int32 FixedRepeatedInt8 = 41;
  repeated int32 FixedRepeatedInt16 = 42;
  repeated int32 FixedRepeatedInt32 = 43;
  repeated int64 FixedRepeatedInt64 = 44;
  repeated uint32 FixedRepeatedUint8 = 45;
  repeated uint32 FixedRepeatedUint16 = 46;
  repeated uint32 FixedRepeatedUint32 = 47;
  repeated uint64 FixedRepeatedUint64 = 48;
  repeated sint32 FixedRepeatedSint8 = 49;
  repeated sint32 FixedRepeatedSint16 = 50;
  repeated sint32 FixedRepeatedSint32 = 51;
  repeated sint64 FixedRepeatedSint64 = 52;
  repeated fixed32 FixedRepeatedFixed32 = 53;
  repeated fixed64 FixedRepeatedFixed64 = 54;
  repeated sfixed32 FixedRepeatedSfixed32 = 55;
  repeated sfixed64 FixedRepeatedSfixed64 = 56;
  repeated bool FixedRepeatedBool = 57;
  repeated string FixedRepeatedString = 58;
  bytes FixedBytes = 59;
  repeated bytes RepeatedFixedBytes = 60;
  repeated bytes FixedRepeatedBytes = 61;
  repeated bytes FixedRepeatedFixedBytes = 62;
  repeated LargestFieldNumber FixedRepeatedLargestFieldNumber = 63;
  repeated uint64 ConstRepeatedUint64 = 64;
  bytes CustomType = 65;
  fixed32 CustomUint32 = 66;
  string CustomString = 67;
  bytes CustomBytes = 68;
  bytes CustomFixedBytes = 69;
  repeated bytes CustomRepeatedBytes = 70;
  repeated bytes CustomRepeatedFixedBytes = 71;
  repeated bytes CustomFixedRepeatedBytes = 72;
  repeated bytes CustomFixedRepeatedFixedBytes = 73;
  OneOf OneOf = 74;
  LargestFieldNumber Pointer = 75;
  repeated LargestFieldNumber RepeatedPointer = 76;
  repeated LargestFieldNumber FixedRepeatedPointer = 77;
  LargestFieldNumber Field = 78;
  repeated LargestFieldNumber RepeatedField = 79;
  repeated LargestFieldNumber FixedRepeatedField = 80;
}
