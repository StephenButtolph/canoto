// Code generated by canoto. DO NOT EDIT.
// versions:
// 	canoto v0.13.0
// source: canoto.go

syntax = "proto3";

package examples;

message LargestFieldNumber {
  uint64 Uint = 536870911;
}

message OneOf {
  oneof A {
    sint32 A1 = 1;
    sint64 A2 = 7;
  }
  oneof B {
    sint32 B1 = 3;
    sint64 B2 = 4;
  }
  sint32 C = 5;
  sint64 D = 6;
}

message Node {
  oneof OneOf {
    Node Next = 2;
  }
  sint32 Value = 1;
}

message RecursiveA {
  RecursiveB Next = 1;
}

message RecursiveB {
  RecursiveA Next = 1;
}

message GenericField {
  bytes Value = 1;
  repeated bytes RepeatedValue = 2;
  repeated bytes FixedRepeatedValue = 3;
  bytes Pointer = 4;
  repeated bytes RepeatedPointer = 5;
  repeated bytes FixedRepeatedPointer = 6;
  bytes Field = 7;
  repeated bytes RepeatedField = 8;
  repeated bytes FixedRepeatedField = 9;
}

message NestedGenericField {
  GenericField Value = 1;
  repeated GenericField RepeatedValue = 2;
  repeated GenericField FixedRepeatedValue = 3;
  GenericField Pointer = 4;
  repeated GenericField RepeatedPointer = 5;
  repeated GenericField FixedRepeatedPointer = 6;
  GenericField Field = 7;
  repeated GenericField RepeatedField = 8;
  repeated GenericField FixedRepeatedField = 9;
}

message Embedded {
  OneOf OneOf = 1;
  LargestFieldNumber LargestFieldNumber = 2;
  GenericField GenericField = 3;
}

message A {
  sint32 B__C = 1;
}

message A__B {
  sint32 C = 1;
}

message Scalars {
  sint32 Int8 = 1;
  sint32 Int16 = 2;
  sint32 Int32 = 3;
  sint64 Int64 = 4;
  uint32 Uint8 = 5;
  uint32 Uint16 = 6;
  uint32 Uint32 = 7;
  uint64 Uint64 = 8;
  sfixed32 Sfixed32 = 9;
  fixed32 Fixed32 = 10;
  sfixed64 Sfixed64 = 11;
  fixed64 Fixed64 = 12;
  bool Bool = 13;
  string String = 14;
  bytes Bytes = 15;
  LargestFieldNumber LargestFieldNumber = 16;
  repeated sint32 RepeatedInt8 = 17;
  repeated sint32 RepeatedInt16 = 18;
  repeated sint32 RepeatedInt32 = 19;
  repeated sint64 RepeatedInt64 = 20;
  repeated uint32 RepeatedUint8 = 21;
  repeated uint32 RepeatedUint16 = 22;
  repeated uint32 RepeatedUint32 = 23;
  repeated uint64 RepeatedUint64 = 24;
  repeated sfixed32 RepeatedSfixed32 = 25;
  repeated fixed32 RepeatedFixed32 = 26;
  repeated sfixed64 RepeatedSfixed64 = 27;
  repeated fixed64 RepeatedFixed64 = 28;
  repeated bool RepeatedBool = 29;
  repeated string RepeatedString = 30;
  repeated bytes RepeatedBytes = 31;
  repeated LargestFieldNumber RepeatedLargestFieldNumber = 32;
  repeated sint32 FixedRepeatedInt8 = 33;
  repeated sint32 FixedRepeatedInt16 = 34;
  repeated sint32 FixedRepeatedInt32 = 35;
  repeated sint64 FixedRepeatedInt64 = 36;
  repeated uint32 FixedRepeatedUint8 = 37;
  repeated uint32 FixedRepeatedUint16 = 38;
  repeated uint32 FixedRepeatedUint32 = 39;
  repeated uint64 FixedRepeatedUint64 = 40;
  repeated sfixed32 FixedRepeatedSfixed32 = 41;
  repeated fixed32 FixedRepeatedFixed32 = 42;
  repeated sfixed64 FixedRepeatedSfixed64 = 43;
  repeated fixed64 FixedRepeatedFixed64 = 44;
  repeated bool FixedRepeatedBool = 45;
  repeated string FixedRepeatedString = 46;
  bytes FixedBytes = 47;
  repeated bytes RepeatedFixedBytes = 48;
  repeated bytes FixedRepeatedBytes = 49;
  repeated bytes FixedRepeatedFixedBytes = 50;
  repeated LargestFieldNumber FixedRepeatedLargestFieldNumber = 51;
  repeated uint64 ConstRepeatedUint64 = 52;
  bytes CustomType = 53;
  fixed32 CustomUint32 = 54;
  string CustomString = 55;
  bytes CustomBytes = 56;
  bytes CustomFixedBytes = 57;
  repeated bytes CustomRepeatedBytes = 58;
  repeated bytes CustomRepeatedFixedBytes = 59;
  repeated bytes CustomFixedRepeatedBytes = 60;
  repeated bytes CustomFixedRepeatedFixedBytes = 61;
  OneOf OneOf = 62;
  LargestFieldNumber Pointer = 63;
  repeated LargestFieldNumber RepeatedPointer = 64;
  repeated LargestFieldNumber FixedRepeatedPointer = 65;
  LargestFieldNumber Field = 66;
  repeated LargestFieldNumber RepeatedField = 67;
  repeated LargestFieldNumber FixedRepeatedField = 68;
}
